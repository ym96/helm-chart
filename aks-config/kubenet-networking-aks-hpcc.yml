- name: Create Azure Kubernetes Service
  hosts: localhost
  connection: local
  vars:
    resource_group: rg-mishra.yash
    location: eastus
    aks_name: HPCC
    username: yash
    ssh_key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3k0vUqjvxiZuk8eNEJHfeutr72I2E24ysD6s+NNx3+y7wLgo/2fPKsatnkDhHO1aEvZVsagLDNNej+V23ZFxGwqhN9qYbWzzkgGymKrh7cOE3cqdtHbeY1AGmm8Kw2ZlBy5ULeYBRTrCs6wF9QDjntIWHmO8lVCjw9YXe2cq4KL0U7YYtMGU0Seb/9rAcC+QEX19fJlYPKwRM+PfHg1/6NKgILG1+LgCBzHkczhrlWOKS4XdbYoRUN8rq7FYl19LFRHqepakevIhSHyymx66WnkKMoXRqNTKsKRw9Mxz+3d3Pplk8D/uOyviGutRGEfCdU6CQWlPbpuuDzO8+7QL1"
    client_id: "7536da34-51c6-4cc3-a796-8f62e85c8915"
    client_secret: "-A5SO.XJ6~w4Bp40HOF8juIi~qhHY~hayw"
    aks_version: 1.5.11

  tasks:
  # If the resource group is already created, then you may reference it in the *vars* section  
  # - name: Create resource group
  #   azure_rm_resourcegroup:
  #     name: "{{ resource_group }}"
  #     location: "{{ location }}"

  - name: Create vnet
    azure_rm_virtualnetwork:
      resource_group: "{{ resource_group }}"
      name: "{{ name }}"
      address_prefixes_cidr:
          - 10.0.0.0/8

  - name: Create subnet
    azure_rm_subnet:
      resource_group: "{{ resource_group }}"
      name: "{{ name }}"
      address_prefix_cidr: 10.240.0.0/16
      virtual_network_name: "{{ name }}"
    register: subnet

  - name: List supported kubernetes version from Azure
  azure_rm_aks_version:
      location: "{{ location }}"
  register: versions

- name: Create AKS cluster with vnet
  azure_rm_aks:
      resource_group: "{{ resource_group }}"
      name: "{{ name }}"
      dns_prefix: "{{ name }}"
      kubernetes_version: "{{ versions.azure_aks_versions[-1] }}"
      agent_pool_profiles:
        - count: 3
          name: nodepool1
          vm_size: Standard_D2_v2
          vnet_subnet_id: "{{ vnet_subnet_id }}"
      linux_profile:
          admin_username: azureuser
          ssh_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
      service_principal:
          client_id: "{{ lookup('ini', 'client_id section=default file=~/.azure/credentials') }}"
          client_secret: "{{ lookup('ini', 'secret section=default file=~/.azure/credentials') }}"
      network_profile:
          network_plugin: kubenet
          pod_cidr: 192.168.0.0/16
          docker_bridge_cidr: 172.17.0.1/16
          dns_service_ip: 10.0.0.10
          service_cidr: 10.0.0.0/16
  register: aks

- name: Get route table
  azure_rm_routetable_facts:
      resource_group: "{{ node_resource_group }}"
  register: routetable

- name: Get network security group
  azure_rm_securitygroup_facts:
      resource_group: "{{ node_resource_group }}"
  register: nsg

- name: Parse subnet id
  set_fact:
      subnet_name: "{{ vnet_subnet_id | regex_search(subnet_regex, '\\1') }}"
      subnet_rg: "{{ vnet_subnet_id | regex_search(rg_regex, '\\1') }}"
      subnet_vn: "{{ vnet_subnet_id | regex_search(vn_regex, '\\1') }}"
  vars:
      subnet_regex: '/subnets/(.+)'
      rg_regex: '/resourceGroups/(.+?)/'
      vn_regex: '/virtualNetworks/(.+?)/'

- name: Associate network resources with the node subnet
  azure_rm_subnet:
      name: "{{ subnet_name[0] }}"
      resource_group: "{{  subnet_rg[0] }}"
      virtual_network_name: "{{ subnet_vn[0] }}"
      security_group: "{{ nsg.ansible_facts.azure_securitygroups[0].id }}"
      route_table: "{{ routetable.route_tables[0].id }}"